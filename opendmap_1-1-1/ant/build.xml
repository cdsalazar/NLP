<project name="opendmap-debug" default="build" basedir="..">

	<!-- make local changes in build.properties file -->
	<property file="ant/build.properties"/>

	<!-- Initialization variables -->
	<property name="project.name" value="${ant.project.name}" />
	<property name="source.dir" value="src" />
	<property name="test.source.dir" value="test"/>
	<property name="build.dir" value="build" />
	<property name="docs.dir" value="docs" />
	<property name="classes.dir" value="${build.dir}/classes" />
	<property name="distribution.dir" value="${build.dir}/distribution" />
	<property name="jar.name" value="${project.name}.jar" />

	<!-- files in lib.dir WILL be included in the final JAR -->
	<!-- files in compile.lib.dir will NOT be included in the final JAR -->
	<property name="lib.dir" value="lib" />
	<property name="compile.lib.dir" value="lib-compile" />

	<!-- test variables -->
	<property name="test.dir" value="${build.dir}/test" />
	<property name="test.data.dir" value="${test.dir}/data" />
	<property name="test.reports.dir" value="${test.dir}/reports" />

	<property name="unit.test.source.dir" value="${source.dir}" />
	<property name="unit.test.data.dir" value="${test.data.dir}/unit" />
	<property name="unit.test.reports.dir" value="${test.reports.dir}/unit" />

	<property name="fn.test.source.dir" value="${source.dir}" />
	<property name="fn.test.data.dir" value="${test.data.dir}/fn" />
	<property name="fn.test.reports.dir" value="${test.reports.dir}/fn" />

	<property name="coverage.test.data.dir" value="${test.data.dir}/coverage" />
	<property name="coverage.test.reports.dir" value="${test.reports.dir}/coverage" />
	<property name="coverage.test.instrumented.dir" value="${test.dir}/instrumented" />

	<property name="cobertura.dir" value="/data/toolrepository/cobertura-1.7" />

    <condition property="isWindows">
            <os family="windows" />
    </condition>
    <condition property="isLinux">
            <os family="unix" />
    </condition>
  	<condition property="isMac">
            <os family="mac" />
    </condition>


	<target name="if_mac"  if="isMac">
	   	<property name="protege-home" value="${protege.home.mac}" />
		<echo message="${protege-home}"/>
		<path id="compile.classpath">
			<fileset dir="${lib.dir}">
				<include name="**/*.jar" />
			</fileset>
			<fileset dir="${protege-home}" >
				<include name="**/*.jar" />
			</fileset>
		</path>
		<property name="myclasspath" refid="compile.classpath"/>
		<echo message="Classpath = ${myclasspath}"/>
	</target>

	<target name="if_linux"  if="isLinux">	
		<property name="protege-home" value="${protege.home.linux}" />
	   	<echo message="${protege-home}"/>
		<path id="compile.classpath">
			<fileset dir="${lib.dir}">
				<include name="**/*.jar" />
			</fileset>
			<fileset dir="${protege-home}" >
				<include name="**/*.jar" />
			</fileset>
		</path>
		<property name="myclasspath" refid="compile.classpath"/>
		<echo message="Classpath = ${myclasspath}"/>
	</target>
	


	<!-- ============================= -->
	<target name="build" depends="clean,compile,test.unit,package-project" description="Does the whole enchilada" />

	<!-- ============================= -->
	<target name="build.quick" depends="clean,compile,package-project" description="No unit tests" />

	<!-- ====================================== -->
	<target name="clean" description="Deletes compiled and generated code" depends="ifs">
		<delete dir="${build.dir}" />
	</target>
	<target name="ifs" description="Sets up conditional variables" depends="if_mac, if_linux">
	</target>

	<!-- ====================================== -->
	<target name="compile" description="Compiles the Java code" depends="ifs">


		<mkdir dir="${build.dir}" />
		<mkdir dir="${classes.dir}" />

		<javac srcdir="${source.dir}" destdir="${classes.dir}" debug="on" deprecation="off">
			<classpath refid="compile.classpath" />
		</javac>

		<javac srcdir="${test.source.dir}" destdir="${classes.dir}" debug="on" deprecation="off">
			<classpath refid="compile.classpath" />
		</javac>
	
		<copy todir="${classes.dir}">
			<fileset dir="${source.dir}">
				<include name="**/*.properties" />
				<include name="**/*.xml" />
			</fileset>
		</copy>

	</target>

	<!-- ====================================== -->
	<target name="package-project" depends="compile" description="Packages the files into a JAR file">
		<mkdir dir="${distribution.dir}" />
		<echo message="Packaging the project..."/>
		<jar destFile="${distribution.dir}/${jar.name}">
			<fileset dir="${classes.dir}">
				<include name="**/*.*" />
				<exclude name="**/*Test.*" />
				<exclude name="**/*TestFn.*" />
			</fileset>
		</jar>
	</target>
	
	<!-- ====================================== -->
	<target name="test.unit" depends="compile, ifs" description="Runs unit tests">
		<mkdir dir="${test.dir}" />
		<mkdir dir="${test.data.dir}" />
		<mkdir dir="${test.reports.dir}" />

		<mkdir dir="${unit.test.data.dir}" />
		<mkdir dir="${unit.test.reports.dir}" />

		<junit printsummary="false" errorProperty="test.failed" failureProperty="test.failed"  dir="${basedir}" fork="true" maxmemory="1024m">
			<classpath>
				<path refid="compile.classpath" />
				<pathelement location="${classes.dir}" />
			</classpath>
			<formatter type="brief" usefile="false" />
			<formatter type="xml" />
			<batchtest todir="${unit.test.data.dir}">
				<fileset dir="${classes.dir}" includes="**/*Test.class">
					<exclude name="**/edu/uchsc/ccp/opendmap/test/*.class"/>
					<exclude name="**/edu/uchsc/ccp/opendmap/dev/*.class"/>
					<exclude name="**/edu/uchsc/ccp/testing/*.class"/>
				</fileset>
			</batchtest>
		</junit>

		
	</target>

	 <!-- ====================================== -->
	   <target name="test.fn" depends="compile, ifs" description="Runs functional tests">
	      <mkdir dir="${test.dir}"/>
	      <mkdir dir="${test.data.dir}"/>
	      <mkdir dir="${test.reports.dir}"/>

	      <mkdir dir="${fn.test.data.dir}"/>
	      <mkdir dir="${fn.test.reports.dir}"/>

	      <junit printsummary="false" errorProperty="test.failed"
	             failureProperty="test.failed"   dir="${basedir}" fork="true" maxmemory="1024m">
	         <classpath>
	            <path refid="compile.classpath"/>
	            <pathelement location="${classes.dir}"/>
	         </classpath>
	         <formatter type="brief" usefile="false"/>
	         <formatter type="xml"/>
	         <batchtest todir="${fn.test.data.dir}">
	            <fileset dir="${classes.dir}" includes="**/*TestFn.class"/>
	         </batchtest>
	      </junit>

	      <junitreport todir="${fn.test.data.dir}">
	         <fileset dir="${fn.test.data.dir}">
	            <include name="TEST-*.xml"/>
	         </fileset>
	         <report format="frames" todir="${fn.test.reports.dir}"/>
	      </junitreport>

	      <fail message="***** Tests failed. Check reports for details."
	            if="test.failed"/>
	   </target>
	
	<!-- ====================================== -->
	<target name="test.cover" depends="compile" description="Runs coverage tests">
		<mkdir dir="${test.dir}" />
		<mkdir dir="${test.data.dir}" />
		<mkdir dir="${test.reports.dir}" />

		<mkdir dir="${coverage.test.data.dir}" />
		<mkdir dir="${coverage.test.reports.dir}" />

		<path id="cobertura.classpath">
			<fileset dir="${cobertura.dir}">
				<include name="cobertura.jar" />
				<include name="/lib/**/*.jar" />
			</fileset>
		</path>

		<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />
		<property name="cobertura.datafile" value="${coverage.test.instrumented.dir}/cobertura.ser" />

		<delete dir="${coverage.test.instrumented.dir}" />

		<cobertura-instrument datafile="${cobertura.datafile}" todir="${coverage.test.instrumented.dir}">
			<ignore regex="org.apache.log4j.*" />
			<fileset dir="${classes.dir}">
				<include name="**/*.class" />
				<exclude name="**/*Test.class" />
				<exclude name="**/*TestFn.class" />
			</fileset>
		</cobertura-instrument>


		<!-- note: your instrumented classes must come first -->
		<junit fork="yes" printsummary="false" errorProperty="test.failed" failureProperty="test.failed"   dir="${basedir}" maxmemory="1024m">
			<sysproperty key="net.sourceforge.cobertura.datafile" file="${cobertura.datafile}" />

			<classpath>
				<pathelement location="${coverage.test.instrumented.dir}" />
				<pathelement location="${classes.dir}" />
				<path refid="compile.classpath" />
				<path refid="cobertura.classpath" />
			</classpath>
			<classpath location="${classes.dir}" />
			<classpath refid="compile.classpath" />
			<formatter type="brief" usefile="false" />
			<formatter type="xml" />
			<batchtest todir="${unit.test.data.dir}">
				<fileset dir="${classes.dir}" includes="**/*Test.class">
					<exclude name="**/edu/uchsc/ccp/opendmap/test/*.class"/>
					<exclude name="**/edu/uchsc/ccp/opendmap/dev/*.class"/>
					<exclude name="**/edu/uchsc/ccp/testing/*.class"/>
				</fileset>
			</batchtest>
		</junit>

		<!-- junit html reports -->
		<junitreport todir="${unit.test.data.dir}">
			<fileset dir="${unit.test.data.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${unit.test.reports.dir}" />
		</junitreport>

		<!-- cobertura html reports -->
		<cobertura-report datafile="${cobertura.datafile}" destdir="${coverage.test.reports.dir}">
			<fileset dir="${source.dir}">
				<include name="**/*.java" />
			</fileset>
		</cobertura-report>

		<!-- cobertura xml reports -->
		<cobertura-report datafile="${cobertura.datafile}" srcdir="${source.dir}" destdir="${coverage.test.data.dir}" format="xml" />

		<fail message="***** Tests failed. Check reports for details." if="test.failed" />
	</target>


	<!-- ====================================== -->
	   <target name="test.all" depends="compile"
	           description="Runs all tests (unit, fn, coverage)">
	      <mkdir dir="${test.dir}"/>
	      <mkdir dir="${test.data.dir}"/>
	      <mkdir dir="${test.reports.dir}"/>

	      <mkdir dir="${unit.test.data.dir}"/>
	      <mkdir dir="${unit.test.reports.dir}"/>
	      <mkdir dir="${fn.test.data.dir}"/>
	      <mkdir dir="${fn.test.reports.dir}"/>
	      <mkdir dir="${coverage.test.data.dir}"/>
	      <mkdir dir="${coverage.test.reports.dir}"/>

	      <path id="cobertura.classpath">
	         <fileset dir="${cobertura.dir}">
	            <include name="cobertura.jar"/>
	            <include name="/lib/**/*.jar"/>
	         </fileset>
	      </path>

	      <taskdef classpathref="cobertura.classpath" resource="tasks.properties"/>
	      <property name="cobertura.datafile"
	                value="${coverage.test.instrumented.dir}/cobertura.ser"/>

	      <delete dir="${coverage.test.instrumented.dir}"/>

	      <cobertura-instrument
	            datafile="${cobertura.datafile}"
	            todir="${coverage.test.instrumented.dir}">
	         <ignore regex="org.apache.log4j.*"/>
	         <fileset dir="${classes.dir}">
	            <include name="**/*.class"/>
	            <exclude name="**/*Test.class"/>
	            <exclude name="**/*TestFn.class"/>
					<exclude name="**/edu/uchsc/ccp/opendmap/test/*.class"/>
					<exclude name="**/edu/uchsc/ccp/opendmap/dev/*.class"/>
					<exclude name="**/edu/uchsc/ccp/testing/*.class"/>
	         </fileset>
	      </cobertura-instrument>


	      <!-- note: your instrumented classes must come first -->
	      <junit fork="yes" printsummary="false" errorProperty="test.failed"
	             failureProperty="test.failed">
	         <sysproperty key="net.sourceforge.cobertura.datafile"
	                      file="${cobertura.datafile}"/>

	         <classpath>
	            <pathelement location="${coverage.test.instrumented.dir}"/>
	            <pathelement location="${classes.dir}"/>
	            <path refid="compile.classpath"/>
	            <path refid="cobertura.classpath"/>
	         </classpath>
	         <classpath location="${classes.dir}"/>
	         <classpath refid="compile.classpath"/>
	         <formatter type="brief" usefile="false"/>
	         <formatter type="xml"/>
	         <batchtest todir="${unit.test.data.dir}">
				<fileset dir="${classes.dir}" includes="**/*Test.class">
					<exclude name="**/edu/uchsc/ccp/opendmap/test/*.class"/>
					<exclude name="**/edu/uchsc/ccp/opendmap/dev/*.class"/>
					<exclude name="**/edu/uchsc/ccp/testing/*.class"/>
				</fileset>
	         </batchtest>
	         <batchtest todir="${fn.test.data.dir}">
	            <fileset dir="${classes.dir}" includes="**/*TestFn.class"/>
	         </batchtest>
	      </junit>

	      <!-- UNIT junit html reports -->
	      <junitreport todir="${unit.test.data.dir}">
	         <fileset dir="${unit.test.data.dir}">
	            <include name="TEST-*.xml"/>
	         </fileset>
	         <report format="frames" todir="${unit.test.reports.dir}"/>
	      </junitreport>

	      <!-- FN junit html reports -->
	      <junitreport todir="${fn.test.data.dir}">
	         <fileset dir="${fn.test.data.dir}">
	            <include name="TEST-*.xml"/>
	         </fileset>
	         <report format="frames" todir="${fn.test.reports.dir}">
	         </report>
	      </junitreport>


	      <!-- cobertura html reports -->
	      <cobertura-report
	            datafile="${cobertura.datafile}"
	            destdir="${coverage.test.reports.dir}">
	         <fileset dir="${source.dir}">
	            <include name="**/*.java"/>
	         </fileset>
	      </cobertura-report>

	      <!-- cobertura xml reports -->
	      <cobertura-report
	            datafile="${cobertura.datafile}"
	            srcdir="${source.dir}" destdir="${coverage.test.data.dir}"
	            format="xml"/>

	      <fail message="***** Tests failed. Check reports for details."
	            if="test.failed"/>
	   </target>

	
	
	<!-- ====================================== -->
	<target name="api">
		<javadoc packagenames="edu.uchsc.ccp.*" sourcepath="${source.dir}" destdir="${docs.dir}/api" windowtitle="CCP Utility Code Library">
			<doctitle>
				<![CDATA[<h1>CCP Utility Code Library</h1>]]></doctitle>
		<bottom>
			<![CDATA[<i>Maintained by William.Baumgartner@uchsc.edu</i>]]></bottom>
</javadoc>
</target>

</project>
